{"version":3,"sources":["api/api.js","redux/dialogs-reducer.js","components/Profile/Profile.module.css","components/Nav/Nav.module.css","redux/profile-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","utils/validate.js","components/Nav/Nav.jsx","components/Users/User.jsx","Loader/Loader.jsx","components/Users/Users.jsx","redux/users-selector.js","components/pagination/Pagination.jsx","components/Users/UserContainer.jsx","components/Profile/ProfileInfo/ProfileDesc.jsx","components/FormComponent/FormComponent.jsx","components/Profile/ProfileInfo/ProfileFormEdit.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPost/Post/Post.jsx","components/Profile/MyPost/MyPost.jsx","components/Profile/MyPost/MyPostContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","App.js","index.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPost/MyPost.module.css","assets/img/user.png","components/Header/Header.module.css","components/Users/Users.module.css","components/pagination/Pagination.module.css"],"names":["instance","axios","create","baseURL","withCredentials","headers","userAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","id","post","unfollow","delete","profileAPI","getProfile","userId","editProfile","profileDesc","put","getStatus","updateStatus","status","changePhotos","photo","formData","FormData","append","authMe","me","signIn","email","password","rememberMe","captcha","signOut","dialogsAPI","getDialogs","resp","startDialog","getMessage","sendMessage","body","getNewMessageCount","GET_MESSAGES","GENERAL_MESSAGES","GET_DIALOGS","PUT_UP_DIALOG","SET_SELECT_DIALOG","GET_NEW_MESSAGES_COUNT","initialState","dialogs","messages","generalMessage","selectDialog","newMessagesCount","dialogsReducer","state","action","type","count","filter","d","select","putUpDialogs","setSelectDialog","dispatch","a","result","newMessageCount","getMessages","items","message","getState","dialog","dialogsPage","find","initializedDialog","updateDialog","generalChat","getGeneralMessagesSuccess","module","exports","ADD_POST","SET_PROFILE_USERS","GET_PROFILE_STATUS","SET_PHOTOS","TOGGLE_PROFILE_MODE","DELETE_POST","profile","profileEditMode","posts","likesCounter","profileReducer","stateCopy","newPost","Math","random","p","photos","mode","toggleProfileMode","getProfileStatus","setProfile","FOLLOW","SET_STATE","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_LOADING","users","totalUsersCount","isLoading","isFollowedInProgress","usersReducer","map","u","followed","total","param","isFetching","followSucces","setIsLoading","toggleIsFollowingProgress","SET_AUTH_DATA","GET_CAPTCHA","login","isAuth","authReducer","url","setUserData","getAuthUserData","resultCode","init","appReducer","reducers","combineReducers","profilePage","usersPage","auth","form","formReducer","app","store","createStore","applyMiddleware","thunk","window","max","Nav","props","className","styles","bar","link","activeClassName","active","to","list","linkCount","User","user","item","src","small","userPng","alt","width","name","disabled","some","onClick","Loading","Users","loading","block","key","createSelector","getPageSize","getTotalUsersCount","getPage","followedInProgress","Pagination","useState","portionNumber","setPortionNumber","pageCount","ceil","sizePage","i","push","portionCount","leftPortion","rightPortion","page","onPageChanged","selected","UserContainer","pageNumber","getUsersThunk","this","React","Component","UsersContainer","connect","totalCount","Contact","title","value","ProfileDesc","descList","aboutMe","lookingForAJob","lookingForAJobDescription","Object","keys","contacts","Textarea","input","meta","touched","error","warning","Input","ProfileFormRedux","reduxForm","onSubmit","handleSubmit","toggle","style","color","Field","component","el","ProfileInfo","img","large","wrap","colImg","isOwner","onChange","e","target","files","length","savePhotos","desc","fullName","initialValues","ProfileStatus","setStatus","editMode","setEditMode","useEffect","autoFocus","onBlur","currentTarget","onDoubleClick","Post","postCreate","flexDirection","header","required","max20","undefined","AddPostForm","placeholder","validate","MyPost","memo","addPost","newPostText","MyPostContainer","Profile","ProfileContainer","match","params","restorProfile","prevProps","prevState","snapshot","compose","file","res","someError","stopSubmit","_error","withRouter","RedirectComponent","Header","headerInner","logo","logout","HeaderContainer","LoginReduxForm","htmlFor","background","loginUser","formdata","DialogsLazy","lazy","App","initialized","path","render","exact","fallback","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d6be6595.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL:\"https://social-network.samuraijs.com/api/1.0/\",\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\":\"ef3df34b-f620-4141-98a4-941ac190a9df\"\r\n    }\r\n})\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return  instance.get(`users?page=${currentPage}&count=${pageSize}&sortOrder=asc`)\r\n            .then(response => response.data)\r\n    },\r\n    follow(id) {\r\n        return instance.post(`follow/${id}`)\r\n    },\r\n    unfollow(id) {\r\n        return instance.delete(`follow/${id}`)\r\n    }\r\n}\r\n\r\nexport const profileAPI ={\r\n    getProfile(userId) {\r\n        return instance.get(`/profile/${userId}`)\r\n    },\r\n    editProfile(profileDesc) {\r\n        return instance.put(`/profile`, profileDesc)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`/profile/status/${userId}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`/profile/status`, {status})\r\n    },\r\n    changePhotos(photo) {\r\n        const formData = new FormData()\r\n        formData.append('image', photo)\r\n        return instance.put('/profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    }\r\n\r\n}\r\nexport const authMe ={\r\n    me(){\r\n        return instance.get('auth/me')\r\n    },\r\n    signIn(email, password, rememberMe = false, captcha=''){\r\n        return instance.post('auth/login',{email, password, rememberMe, captcha})\r\n    },\r\n    signOut(){\r\n        return instance.delete('auth/login')\r\n    },\r\n    captcha() {\r\n        return instance.get('security/get-captcha-url')\r\n    }\r\n}\r\nexport const dialogsAPI ={\r\n    getDialogs() {\r\n        return instance.get('dialogs')\r\n            .then(resp => resp.data)\r\n    },\r\n    startDialog(userId) {\r\n        return instance.put(`dialogs/${userId}`)\r\n            .then(resp => resp.data)\r\n    },\r\n    getMessage(userId) {\r\n        return instance.get(`dialogs/${userId}/messages`)\r\n            .then(resp => resp.data)\r\n    },\r\n    sendMessage(userId, body) {\r\n        return instance.post(`dialogs/${userId}/messages`, {body})\r\n            .then(resp => resp.data)\r\n    },\r\n    getNewMessageCount() {\r\n        return instance.get(`dialogs/messages/new/count`)\r\n            .then(resp => resp.data)\r\n    },\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {dialogsAPI} from '../api/api'\r\n\r\nconst GET_MESSAGES = 'SOCIAL_NETWORK/DIALOGS/GET_MESSAGES'\r\nconst GENERAL_MESSAGES = 'SOCIAL_NETWORK/DIALOGS/GENERAL_MESSAGES'\r\nconst GET_DIALOGS = 'SOCIAL_NETWORK/DIALOGS/GET_DIALOGS'\r\nconst PUT_UP_DIALOG = 'SOCIAL_NETWORK/DIALOGS/PUT_UP_DIALOG'\r\nconst SET_SELECT_DIALOG = 'SOCIAL_NETWORK/DIALOGS/SET_SELECT_DIALOG'\r\nconst GET_NEW_MESSAGES_COUNT = 'SOCIAL_NETWORK/DIALOGS/GET_NEW_MESSAGES_COUNT'\r\nlet initialState = {\r\n    dialogs: [],\r\n    messages: [],\r\n    generalMessage: [],\r\n    selectDialog: false,\r\n    newMessagesCount: 0\r\n\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GENERAL_MESSAGES:\r\n            return {\r\n                ...state,\r\n                generalMessage: [...state.generalMessage, ...action.messages]\r\n            }\r\n        case GET_MESSAGES:\r\n            return {\r\n                ...state,\r\n                messages: [...action.messages]\r\n            }\r\n        case GET_DIALOGS:\r\n            return  {\r\n                ...state,\r\n                dialogs: action.dialogs\r\n            }\r\n        case GET_NEW_MESSAGES_COUNT:return {\r\n            ...state,\r\n            newMessagesCount: action.count\r\n        }\r\n        case PUT_UP_DIALOG:\r\n            return  {\r\n                ...state,\r\n                dialogs: [\r\n                    ...state.dialogs.filter(d => d.id === action.userId ),\r\n                    ...state.dialogs.filter(d => d.id !== action.userId )\r\n                ]\r\n            }\r\n        case SET_SELECT_DIALOG: return {\r\n            ...state,\r\n            selectDialog: action.select\r\n        }\r\n        default:return state\r\n    }\r\n}\r\nexport default dialogsReducer\r\nexport const getMessagesSuccess = (messages) => ({ type:GET_MESSAGES, messages })\r\nexport const getGeneralMessagesSuccess = (messages) => ({ type:GENERAL_MESSAGES, messages })\r\nexport const getNewMessageCount = (count) => ({ type:GET_NEW_MESSAGES_COUNT, count })\r\nexport const getDialogsSuccess = (dialogs) => ({ type:GET_DIALOGS, dialogs })\r\nexport const putUpDialogs = (userId) => ({ type:PUT_UP_DIALOG, userId })\r\nexport const setSelectDialog = (select) => ({ type:SET_SELECT_DIALOG, select })\r\n\r\n\r\nexport const getDialogs = () =>async (dispatch) => {\r\n    const result = await dialogsAPI.getDialogs()\r\n    dispatch(getDialogsSuccess(result))\r\n    dispatch(newMessageCount())\r\n}\r\nexport const startDialog = (userId) => async (dispatch) => {\r\n    await dialogsAPI.startDialog(userId)\r\n}\r\nexport const getMessages = (userId) => async (dispatch) => {\r\n    const result = await dialogsAPI.getMessage(userId)\r\n    dispatch(getMessagesSuccess(result.items))\r\n    dispatch(newMessageCount())\r\n}\r\nexport const sendMessage = (userId, message) => async (dispatch, getState) => {\r\n    await dialogsAPI.sendMessage(userId, message)\r\n    dispatch(getMessages(userId))\r\n    const dialog = getState().dialogsPage.dialogs.find(d => d.id === userId)\r\n    dialog ? dispatch(putUpDialogs(userId)) : dispatch(getDialogs())\r\n}\r\nexport const newMessageCount = () => async (dispatch) => {\r\n    const count =  await dialogsAPI.getNewMessageCount()\r\n    dispatch(getNewMessageCount(count))\r\n}\r\nexport const initializedDialog = (userId) => (dispatch) => {\r\n    if(userId !== 'ws' && userId) {\r\n        dispatch(startDialog(userId))\r\n        dispatch(getMessages(userId))\r\n        dispatch(setSelectDialog(true))\r\n    }\r\n    dispatch(getDialogs())\r\n}\r\nexport const updateDialog = (userId) => dispatch => {\r\n    if(userId !== 'ws') {\r\n        dispatch(getMessages(userId))\r\n        dispatch(setSelectDialog(true))\r\n    }else {\r\n        dispatch(setSelectDialog(false))\r\n    }\r\n}\r\nexport const generalChat = (messages) => (dispatch) => {\r\n    dispatch(getGeneralMessagesSuccess( messages))\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Profile_page__26mpX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"Nav_bar__QZHth\",\"link\":\"Nav_link__f1WjG\",\"list\":\"Nav_list__3k5QM\",\"linkCount\":\"Nav_linkCount__2vnhl\",\"active\":\"Nav_active__1iS-s\"};","import {profileAPI} from '../api/api'\r\nimport {stopSubmit} from 'redux-form'\r\n\r\nconst ADD_POST = 'SOCIAL_NETWORK/PROFILE/ADD_POST'\r\nconst SET_PROFILE_USERS = 'SOCIAL_NETWORK/PROFILE/SET_PROFILE_USERS'\r\nconst GET_PROFILE_STATUS = 'SOCIAL_NETWORK/PROFILE/GET_PROFILE_STATUS'\r\nconst SET_PHOTOS = 'SOCIAL_NETWORK/PROFILE/SET_PHOTOS'\r\nconst TOGGLE_PROFILE_MODE = 'SOCIAL_NETWORK/PROFILE/TOGGLE_PROFILE_MODE'\r\nconst DELETE_POST = 'SOCIAL_NETWORK/PROFILE/DELETE_POST'\r\n\r\nlet initialState = {\r\n    profile: null,\r\n    profileEditMode:false,\r\n    status:'',\r\n    posts: [\r\n        {id: 1, message: 'hello my darling', likesCounter: 12},\r\n        {id: 2, message: 'Its my first post ', likesCounter: 0},\r\n        {id: 3, message: 'hello my darling', likesCounter: 1}\r\n    ]\r\n}\r\nconst profileReducer = (state = initialState, action) =>{\r\n    let stateCopy = {...state}\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id:Math.random(),\r\n                message:action.newPost,\r\n                likesCounter:0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [newPost, ...state.posts]\r\n            }\r\n        case DELETE_POST:return {\r\n            ...state,\r\n            posts: state.posts.filter(p => p.id !== action.id)\r\n        }\r\n        case SET_PHOTOS:return {\r\n            ...state, profile: {...state.profile, photos:action.data}\r\n        }\r\n        case TOGGLE_PROFILE_MODE: return {\r\n            ...state,\r\n            profileEditMode: action.mode\r\n        }\r\n        case SET_PROFILE_USERS: return {...state, profile: action.data}\r\n        case GET_PROFILE_STATUS:\r\n            return{...state, status: action.status}\r\n        default: return stateCopy\r\n    }\r\n}\r\nexport default profileReducer\r\nexport const addPostAC = (newPost) => ({type:ADD_POST, newPost })\r\nexport const removePostAC = (id) => ({type: 'DELETE_POST', id})\r\nexport const toggleProfileMode = (mode) =>({type: TOGGLE_PROFILE_MODE, mode})\r\nexport const setUsersProfile = (data) => ({type: SET_PROFILE_USERS, data})\r\nexport const getProfileStatus = (status) => ({type:GET_PROFILE_STATUS, status})\r\nconst updatePhotos = (data) =>({type:SET_PHOTOS, data})\r\n\r\n\r\nexport const editProfile = (data) =>(dispatch, getState) =>{\r\n    profileAPI.editProfile(data).then(res =>{\r\n        const userId = getState().auth.userId\r\n        if(res.data.resultCode === 0){\r\n            dispatch(setProfile(userId))\r\n            dispatch(toggleProfileMode(false))\r\n        }else {\r\n            const someError = res.data.messages[0].length > 0 ? res.data.messages[0] : 'some error'\r\n            if(res.data.resultCode === 1){\r\n                dispatch(stopSubmit('profileEdit', {_error: someError}))\r\n            }\r\n\r\n\r\n        }\r\n    })\r\n}\r\nexport const setProfile = (userId)=>{\r\n    return dispatch => {\r\n        profileAPI.getProfile(userId)\r\n            .then(response => {\r\n                dispatch(setUsersProfile(response.data))\r\n            })\r\n    }\r\n}\r\nexport const getStatus = (userId) => dispatch =>{\r\n    profileAPI.getStatus(userId)\r\n        .then(response =>{\r\n            dispatch(getProfileStatus(response.data))\r\n        })\r\n}\r\nexport const updateStatus = (status) => dispatch =>{\r\n    profileAPI.updateStatus(status)\r\n        .then(response => {\r\n            if(response.data.resultCode === 0) {\r\n                return dispatch(getProfileStatus(status))\r\n            }\r\n        })\r\n}\r\n\r\nexport const savePhotos = (file) => dispatch =>{\r\n    profileAPI.changePhotos(file).then(res => {\r\n        dispatch(updatePhotos(res.data.data.photos))\r\n    })\r\n}\r\n","import {userAPI} from '../api/api'\r\n\r\nconst FOLLOW = 'SOCIAL_NETWORK/USERS/FOLLOW'\r\nconst SET_STATE = 'SOCIAL_NETWORK/USERS/SET_STATE'\r\nconst SET_CURRENT_PAGE = 'SOCIAL_NETWORK/USERS/SET_CURRENT_PAGE'\r\nconst SET_TOTAL_COUNT = 'SOCIAL_NETWORK/USERS/SET_TOTAL_COUNT'\r\nconst TOGGLE_IS_LOADING = 'SOCIAL_NETWORK/USERS/TOGGLE_IS_LOADING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'SOCIAL_NETWORK/USERS/TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n    users:[],\r\n    pageSize: 100,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isLoading: true,\r\n    isFollowedInProgress:[2],\r\n}\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {...state, users: state.users.map(u => {\r\n                    if(u.id === action.userId){\r\n                        return {...u, followed: !u.followed}\r\n                    }\r\n                    return u\r\n                })}\r\n        case SET_STATE: return {...state, users: action.users};\r\n        case SET_CURRENT_PAGE: return {...state, currentPage: action.currentPage};\r\n        case SET_TOTAL_COUNT: return {...state, totalUsersCount: action.total}\r\n        case TOGGLE_IS_LOADING: return {...state, isLoading: action.param}\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n\r\n            return  {\r\n            ...state,\r\n            isFollowedInProgress: action.isFetching ?\r\n                [...state.isFollowedInProgress, action.userId]:\r\n                state.isFollowedInProgress.filter( id => id !== action.userId)\r\n\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default usersReducer\r\nconst setTotalUsersCount = (total) => ({type: SET_TOTAL_COUNT, total})\r\nconst setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nconst followSucces = (userId) => ({ type: FOLLOW, userId})\r\nconst setUsers = (users) => ({ type: SET_STATE, users})\r\nconst setIsLoading = (param) =>({type: TOGGLE_IS_LOADING, param})\r\nexport const toggleIsFollowingProgress = (isFetching, userId) => ({type:TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId})\r\n\r\n\r\n\r\nexport const  getUsersThunk = (page, pageSize) => {\r\n\r\n    return dispatch =>{\r\n        dispatch(setIsLoading(true))\r\n        userAPI.getUsers(page, pageSize)\r\n            .then(data => {\r\n                dispatch(setCurrentPage(page))\r\n                dispatch(setTotalUsersCount(data.totalCount))\r\n                dispatch(setUsers(data.items))\r\n                dispatch(setIsLoading(false))\r\n            })\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) =>{\r\n    return dispatch => {\r\n        dispatch(toggleIsFollowingProgress(true, userId))\r\n        userAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followSucces(userId))\r\n                }\r\n                dispatch(toggleIsFollowingProgress(false, userId))\r\n            })\r\n    }\r\n}\r\n\r\nexport const follow = (userId) =>{\r\n\r\n    return dispatch => {\r\n        dispatch(toggleIsFollowingProgress(true, userId))\r\n        userAPI.follow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followSucces(userId))\r\n                }\r\n                dispatch(toggleIsFollowingProgress(false, userId))\r\n            })\r\n\r\n    }\r\n}\r\n\r\n","import {authMe} from '../api/api'\r\nimport {stopSubmit} from 'redux-form'\r\n\r\nconst SET_AUTH_DATA = 'SOCIAL_NETWORK/AUTH/SET_AUTH_DATA'\r\nconst GET_CAPTCHA = 'SOCIAL_NETWORK/AUTH/GET_CAPTCHA'\r\nconst initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth:false,\r\n    captcha: null\r\n}\r\nconst authReducer = (state = initialState, action) =>{\r\n    switch (action.type) {\r\n        case SET_AUTH_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        case GET_CAPTCHA:return {\r\n            ...state,\r\n            captcha: action.url\r\n        }\r\n        default: return state\r\n    }\r\n\r\n}\r\n\r\nexport default authReducer\r\nexport const getCaptchaUrl = (url) =>({type: GET_CAPTCHA, url})\r\nexport const setUserData = (userId, email, login, isAuth) => ({type:SET_AUTH_DATA, data: {userId, email, login, isAuth}})\r\n\r\nexport const getAuthUserData = () => dispatch => {\r\n    authMe.me()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                let {email, id, login} = response.data.data\r\n                dispatch(setUserData(id, email, login, true))\r\n            }\r\n        })\r\n}\r\nexport const loginUser = (email, password, rememberMe, captcha) => dispatch =>{\r\n    authMe.signIn(email, password, rememberMe, captcha)\r\n        .then(response =>{\r\n            if(response.data.resultCode === 0){\r\n                dispatch(getAuthUserData())\r\n            }else {\r\n                if(response.data.resultCode === 10){\r\n                    authMe.captcha().then(res =>{\r\n                        dispatch(getCaptchaUrl(res.data.url))\r\n                        dispatch(getAuthUserData())\r\n                    })\r\n                }\r\n                const someError = response.data.messages[0].length > 0 ? response.data.messages[0] : 'some error'\r\n                dispatch(stopSubmit('login', {_error: someError}))\r\n            }\r\n        })\r\n}\r\n\r\nexport const logout = () =>dispatch =>{\r\n    authMe.signOut().then(response =>{\r\n        dispatch(setUserData(null, null, null, false))\r\n    })\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import {getAuthUserData} from './auth-reducer'\r\n\r\nconst INITIALIZED_SUCCESS = 'SOCIAL_NETWORK_INITIALIZED_SUCCESS'\r\nconst initialState = {\r\n    init: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: return {\r\n            ...state,\r\n            init: true\r\n        }\r\n        default:return state\r\n    }\r\n}\r\nexport default appReducer\r\nconst initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\n\r\n\r\nexport const initialized = ()  =>async dispatch => {\r\n    await dispatch(getAuthUserData())\r\n    await dispatch(initializedSuccess())\r\n}","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport profileReducer from './profile-reducer'\r\nimport dialogsReducer from './dialogs-reducer'\r\nimport usersReducer from './users-reducer'\r\nimport authReducer from './auth-reducer'\r\nimport thunk from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from './app-reducer'\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\nlet store = createStore(reducers, applyMiddleware(thunk))\r\nwindow.store = store\r\nexport default store","export const required = value => {\r\n    if (value) return undefined\r\n    else return  'Field is required'\r\n}\r\n\r\nexport const maxLength = max => value =>\r\n    value && value.length > max ? `Max simbols ${max} ` : undefined","import React from 'react'\r\nimport styles from './Nav.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\n\r\nconst Nav = (props) => {\r\n    return(\r\n        <nav>\r\n            <ul className={styles.bar}>\r\n                <li>\r\n                    <NavLink className={styles.link} activeClassName={styles.active} to='/profile'>Profile</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink className={styles.link} activeClassName={styles.active} to='/news'>News</NavLink>\r\n                </li>\r\n                <li className={styles.list}>\r\n                    <NavLink className={styles.link} activeClassName={styles.active} to='/dialogs'>Message</NavLink>\r\n                    {props.newMessagesCount > 0 && <span className={styles.linkCount}>{props.newMessagesCount}</span>}\r\n                </li>\r\n                <li>\r\n                    <NavLink className={styles.link} activeClassName={styles.active} to='/photo'>Photo</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink className={styles.link} activeClassName={styles.active} to='/users'>Users</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport userPng from '../../assets/img/user.png'\r\nimport styles from './Users.module.css'\r\n\r\n\r\nconst User  = ({user,isFollowedInProgress, unfollow, follow}) => {\r\n    return(\r\n        <div className={styles.item}>\r\n            <NavLink to={'profile/' + user.id}>\r\n                <img src={user.photos.small != null ? user.photos.small : userPng} alt=\"user\" width={\"50px\"}/>\r\n            </NavLink>\r\n            <div>{user.name} </div>\r\n            {user.followed ? <button\r\n                    disabled={isFollowedInProgress.some(id => id===user.id)}\r\n                    onClick={()=> {unfollow(user.id)}}>unfollow</button>:\r\n                <button disabled={isFollowedInProgress.some(id => id===user.id)} onClick={()=>{\r\n                    follow(user.id)\r\n                }\r\n                }>follow</button>}\r\n        </div>\r\n    )\r\n}\r\nexport default User","import React from 'react'\r\nimport './Loading.css'\r\nconst Loading = () => {\r\n    return(\r\n        <div className='lds-spinner'>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\nexport default Loading","import React from 'react'\r\nimport styles from './Users.module.css'\r\nimport User from './User'\r\nimport Loading from '../../Loader/Loader'\r\n\r\n\r\nconst Users = (props) => {\r\n    if (props.loading) return <Loading/>\r\n    return (\r\n        <div>\r\n            <div className={styles.block}>\r\n                {props.users.map(user => <User key={user.id} user={user} follow={props.follow}\r\n                                              isFollowedInProgress={props.isFollowedInProgress}\r\n                                              unfollow={props.unfollow}/>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Users\r\n\r\n","import {createSelector} from 'reselect';\r\n\r\nexport const setUsers = (state) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getUsers  = createSelector( setUsers, (users) => {\r\n     return users.filter( u => u )\r\n})\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const isLoading = (state) => {\r\n    return state.usersPage.isLoading\r\n}\r\nexport const followedInProgress = (state) => {\r\n    return state.usersPage.isFollowedInProgress\r\n}","import styles from './Pagination.module.css'\r\nimport React, {useState} from 'react'\r\n\r\nconst Pagination = (props) =>{\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let pageCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    let  sizePage =[]\r\n    for (let i = 1; i <= pageCount; i++){\r\n        sizePage.push(i)\r\n    }\r\n    const portionSize = 10\r\n    const portionCount = Math.ceil(pageCount / portionSize)\r\n    const leftPortion = (portionNumber - 1) * portionSize + 1\r\n    const rightPortion = portionNumber * portionSize\r\n\r\n    return(\r\n        <div className={styles.page}>{portionNumber > 1 &&  <button onClick={() => {setPortionNumber(portionNumber -1)}}>{'<'}</button>}\r\n            {sizePage.filter( p => p >= leftPortion && p <= rightPortion).map((p) => <span\r\n                key={p}\r\n                onClick={()=> props.onPageChanged(p)}\r\n                className={props.currentPage === p ? `${styles.selected}` : ''}>{p}</span>)}\r\n            {portionCount && pageCount > rightPortion &&  <button onClick={() => {setPortionNumber(portionNumber + 1)}}>{'>'}</button>}\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Pagination","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {follow, getUsersThunk, toggleIsFollowingProgress, unfollow} from '../../redux/users-reducer';\r\nimport Users from './Users'\r\n\r\nimport {\r\n    followedInProgress,\r\n    getPage,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers,\r\n    isLoading,\r\n} from '../../redux/users-selector'\r\nimport Pagination from '../pagination/Pagination'\r\n\r\nclass UserContainer extends React.Component{\r\n    componentDidMount() {\r\n        this.props.getUsersThunk(this.props.currentPage, this.props.pageSize )\r\n    }\r\n    onPageChanged =(pageNumber) => {\r\n        this.props.getUsersThunk(pageNumber, this.props.pageSize)\r\n    }\r\n    render(){\r\n        return <>\r\n            <Pagination onPageChanged={this.onPageChanged}\r\n                        currentPage={this.props.currentPage}\r\n                        totalUsersCount={this.props.totalUsersCount}\r\n                        pageSize={this.props.pageSize}/>\r\n            <Users\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                users={this.props.users}\r\n                loading={this.props.isLoading}\r\n                isFollowedInProgress={this.props.isFollowedInProgress}\r\n                toggleIsFollowingProgress={this.props.toggleIsFollowingProgress}\r\n            />\r\n        </>\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getPage(state),\r\n        isLoading: isLoading(state),\r\n        isFollowedInProgress: followedInProgress(state)\r\n    }\r\n}\r\nconst UsersContainer = connect(mapStateToProps,\r\n    { unfollow, follow, toggleIsFollowingProgress,getUsersThunk})(UserContainer)\r\n\r\nexport default UsersContainer","import React from 'react'\r\nimport styles from './ProfileInfo.module.css'\r\nconst ProfileDesc = ({profile, toggleProfileMode}) =>{\r\n    return(\r\n        <ul className={styles.descList}>\r\n            <Contact title={'aboutMe :'} value={profile.aboutMe}/>\r\n            <Contact title={'lookingForAJob :'} value={profile.lookingForAJob ? 'yeas' : 'no'}/>\r\n            <Contact title={'lookingForAJobDescription :'} value={profile.lookingForAJobDescription}/>\r\n            {Object.keys(profile.contacts).map( key =>{\r\n                return <Contact key={key} title={key} value={profile.contacts[key]} />\r\n            })}\r\n            <button onClick={()=> toggleProfileMode(true)}>change</button>\r\n        </ul>\r\n    )\r\n}\r\nconst Contact = ({title, value}) =>{\r\n    return <li ><strong>{title} </strong> {value}</li>\r\n}\r\n\r\nexport default ProfileDesc","import React from 'react'\r\n\r\n\r\nexport const Textarea = ({input, meta: { touched, error, warning }, ...props }) =>{\r\n\r\n    return(\r\n        <div>\r\n            <textarea {...input} {...props}/>\r\n            {touched && (error && <span>{error}</span>)}\r\n        </div>\r\n    )\r\n}\r\nexport const Input = ({input, meta: { touched, error, warning }, ...props }) =>{\r\n\r\n    return(\r\n        <div>\r\n            <input {...input} {...props}/>\r\n            {touched && (error && <span>{error}</span>)}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {Input} from '../../FormComponent/FormComponent'\r\nconst ProfileForm = ({error, ...props}) => {\r\n    return (\r\n            <form onSubmit={props.handleSubmit}>\r\n                <button>sub</button> <button onClick={()=> props.toggle(false)}>back</button>\r\n                {error && <div style={{color:'red'}}>{error}</div>}\r\n                <div>Full name: <Field type={'text'} component={'input'} name={'fullName'}/></div>\r\n                <div>About me: <Field type={'text'} component={'input'} name={'aboutMe'}/></div>\r\n                <div>lookingForAJob : <Field type={'checkbox'} component={'input'} name={'lookingForAJob'}/></div>\r\n                <div>lookingForAJobDescription: <Field type={'text'} component={'textarea'} name={'lookingForAJobDescription'}/></div>\r\n                {Object.keys(props.profile.contacts).map( el =>{\r\n                    return <div key={el}>{el}<Field type={'text'} component={Input} name={`contacts.${el}`} /></div>\r\n                })}\r\n\r\n            </form>\r\n    )\r\n}\r\n\r\nconst ProfileFormRedux = reduxForm({form: 'profileEdit'})(ProfileForm)\r\nexport default ProfileFormRedux","import React, {useEffect, useState} from 'react'\r\nimport styles from './ProfileInfo.module.css'\r\nimport Loading from '../../../Loader/Loader'\r\nimport ProfileDesc from './ProfileDesc'\r\nimport ProfileFormRedux from './ProfileFormEdit'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\n\r\nconst ProfileInfo = props =>{\r\n    const onSave = (e) =>{\r\n        if(e.target.files.length){\r\n            props.savePhotos(e.target.files[0])\r\n        }\r\n\r\n    }\r\n    const changeProfile = (form) =>{\r\n        props.editProfile(form)\r\n    }\r\n    const img = props.profile.photos.large ? props.profile.photos.large : \"https://placekitten.com/200/260\"\r\n    if (!props.profile) {\r\n        return <Loading/>\r\n    }\r\n\r\n    return(\r\n        <div className={styles.wrap}>\r\n            <div className={styles.colImg}>\r\n                <img src={img} alt=\"info\"/>\r\n                {props.isOwner ? <input onChange={onSave} type=\"file\"/> :\r\n                <NavLink to={'/dialogs/' + props.profile.userId}>\r\n                    <button>send</button>\r\n                </NavLink>}\r\n\r\n            </div>\r\n            <div className={styles.desc}>\r\n                <h1>{props.profile.fullName}</h1>\r\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n                {\r\n                    props.mode ?\r\n                        <ProfileFormRedux\r\n                            onSubmit={changeProfile}\r\n                            profile={props.profile}\r\n                            initialValues={props.profile}\r\n                            toggle={props.toggleProfileMode}\r\n                        />\r\n                        : <ProfileDesc profile={props.profile} toggleProfileMode={props.toggleProfileMode} />\r\n                }\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default ProfileInfo\r\n\r\nconst ProfileStatus = (props) => {\r\n    let [status, setStatus] = useState(props.status)\r\n    let [editMode, setEditMode] = useState(false)\r\n    useEffect(()=>{\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const changeMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivetedMode = () =>{\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const changeStatus = (e) =>{\r\n        setStatus(e.currentTarget.value)\r\n\r\n    }\r\n    return(\r\n        <div className={styles.status}>\r\n            <strong>status :</strong>\r\n            {editMode ?\r\n                <input autoFocus={true}\r\n                       onBlur={deactivetedMode}\r\n                       value={status}\r\n                       onChange={changeStatus}/>\r\n                :<span onDoubleClick={changeMode}>{status}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\nimport styles from '../MyPost.module.css'\r\nimport userPng from '../../../../assets/img/user.png';\r\n\r\nconst Post = (props)=>{\r\n    return (\r\n        <div>\r\n            <div  className={styles.postCreate}>\r\n                <div style={{flexDirection: 'column'}} className={styles.header}>\r\n                    <img src={userPng} alt=\"\"/>\r\n                    <div>NAME PROFILE</div>\r\n                </div>\r\n                <div>{props.message}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Post","import React from 'react'\r\nimport styles from  './MyPost.module.css'\r\nimport Post from './Post/Post'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {maxLength, required} from '../../../utils/validate'\r\nimport {Textarea} from '../../FormComponent/FormComponent'\r\nimport userPng from '../../../assets/img/user.png'\r\n\r\nconst max20 = maxLength(20)\r\nconst AddPost = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field name={'newPostText'} component={Textarea}\r\n                   type={'text'} placeholder={'Введите текст'}\r\n            validate={[required, max20]}/>\r\n            <button>add post</button>\r\n        </form>\r\n    )\r\n}\r\nconst AddPostForm = reduxForm({form: 'addPostForm'})(AddPost)\r\n\r\n\r\n\r\nconst MyPost = React.memo ((props) => {\r\n\r\n    let post = props.profilePage.posts.map(el =>{\r\n        return <Post key={el.id} message ={el.message}/>\r\n    })\r\n\r\n    const addPost = (value)=> {\r\n        props.addPost(value.newPostText)\r\n        value.newPostText = ''\r\n    }\r\n\r\n    return (\r\n        <div className={styles.wrap}>\r\n            <div className={styles.postCreate}>\r\n                <div className={styles.header}>\r\n                    <img src={userPng} alt=\"\"/>\r\n                    <div>NAME PROFILE</div>\r\n                </div>\r\n                <AddPostForm onSubmit={addPost}/>\r\n            </div>\r\n            {post}\r\n        </div>\r\n\r\n    )\r\n})\r\n\r\nexport default MyPost\r\n\r\n","import React from 'react'\r\nimport {addPostAC} from '../../../redux/profile-reducer'\r\nimport MyPost from './MyPost'\r\nimport {connect} from 'react-redux'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        addPost: (body) => dispatch(addPostAC(body))\r\n    }\r\n}\r\nconst MyPostContainer =  connect(mapStateToProps, mapDispatchToProps)(MyPost)\r\nexport default MyPostContainer\r\n\r\n","import React from 'react'\r\nimport styles from './Profile.module.css'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport MyPostContainer from './MyPost/MyPostContainer'\r\nimport Loading from '../../Loader/Loader'\r\n\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n    if(!props.profile)return <Loading/>\r\n    return (\r\n        <div className={styles.page}>\r\n                    <ProfileInfo\r\n                        mode={props.mode} toggleProfileMode={props.toggleProfileMode}\r\n                        isOwner={props.isOwner}\r\n                        profile={props.profile}\r\n                        status={props.status}\r\n                        updateStatus={props.updateStatus}\r\n                        savePhotos={props.savePhotos}\r\n                        editProfile={props.editProfile}/>\r\n                <MyPostContainer/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport Profile from './Profile'\r\nimport {connect} from 'react-redux'\r\nimport {editProfile, getStatus, savePhotos, setProfile, toggleProfileMode, updateStatus} from '../../redux/profile-reducer'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect'\r\nimport {compose} from 'redux'\r\n\r\n\r\nclass ProfileContainer extends React.Component{\r\n    restorProfile() {\r\n        let userId = this.props.match.params.userId\r\n        if(!userId) userId = this.props.userId\r\n        this.props.setProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n    componentDidMount() {\r\n       this.restorProfile()\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.match.params.userId !== this.props.match.params.userId){\r\n            this.restorProfile()\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return <Profile\r\n            profile={this.props.profile} status={this.props.status}\r\n            isOwner={!this.props.match.params.userId}\r\n            savePhotos={this.props.savePhotos}\r\n            updateStatus={this.props.updateStatus}\r\n            mode={this.props.mode} toggleProfileMode={this.props.toggleProfileMode}\r\n            editProfile={this.props.editProfile}/>\r\n    }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        userId: state.auth.userId,\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        mode: state.profilePage.profileEditMode,\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, {setProfile, getStatus, updateStatus,\r\n        savePhotos, toggleProfileMode, editProfile}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to={'/login'} />\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    const mapStateToProps = (state) =>({isAuth: state.auth.isAuth})\r\n    let ConectectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n    return ConectectedRedirectComponent\r\n}","import React from 'react'\r\nimport styles from './Header.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Header = (props)=> {\r\n    return(\r\n        <header className={styles.header}>\r\n            <div className='container'>\r\n                <div className={styles.headerInner}>\r\n                    <h2>social network</h2>\r\n                    <div className={styles.logo}>\r\n                        {props.isAuth ? <span>{props.email} <button onClick={props.logout}>logout</button></span>\r\n                            :<NavLink to={'/login'}>\r\n                                <div className={styles.logo}>{props.isAuth ? props.login : 'login'}</div>\r\n                            </NavLink>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\nexport default Header","import React from 'react'\r\nimport Header from './Header'\r\nimport {connect} from 'react-redux'\r\nimport {getAuthUserData, logout} from '../../redux/auth-reducer'\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component{\r\n    componentDidMount() {\r\n        this.props.getAuthUserData()\r\n    }\r\n    render() {\r\n        return <Header {...this.props} isAuth={this.props.isAuth}/>\r\n    }\r\n}\r\nconst setStateToProps = (state) =>({\r\n    isAuth: state.auth.isAuth,\r\n    email: state.auth.email,\r\n\r\n})\r\nexport default connect(setStateToProps, {getAuthUserData, logout})(HeaderContainer)","import React from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport { required} from '../../utils/validate'\r\nimport {connect} from 'react-redux'\r\nimport {loginUser} from '../../redux/auth-reducer'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\n\r\nconst LoginForm = (props) =>{\r\n\r\n    return(\r\n        <form onSubmit={ props.handleSubmit}>\r\n            <div>\r\n                <Field name='email' component='input' type='text'  placeholder={'login'}\r\n                       validate={[required]}/>\r\n                <div><b> free@samuraijs.com</b></div>\r\n            </div>\r\n            <div>\r\n                <Field name='password' component='input' type='password' placeholder={'password'}/>\r\n                <div><b>free</b></div>\r\n            </div>\r\n            <div>\r\n                <Field name='rememberMe' component='input' type='checkbox' />\r\n                <label htmlFor='checkbox'>Remember me</label>\r\n            </div>\r\n            {props.error && <div><span style={{background:'red'}}>{props.error}</span></div>}\r\n            {props.captcha && <img src={props.captcha} alt='captcha'/>}\r\n            {props.captcha && <div> <Field name='captcha' component='input' type='text' placeholder={'captcha'}/></div>}\r\n            <button type='submit'>Submit</button>\r\n            <button type={'reset'}>Reset</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm =  reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmitForm = (formdata) => {\r\n        const {email, password, rememberMe, captcha} = formdata\r\n        props.loginUser(email, password, rememberMe, captcha)\r\n    }\r\n    if(props.isAuth){\r\n       return <Redirect to={'/profile'}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div><h1>Login</h1></div>\r\n            <LoginReduxForm onSubmit={onSubmitForm} captcha={props.captcha}/>\r\n        </div>\r\n    )\r\n}\r\nconst mstp = (state) =>({\r\n    isAuth: state.auth.isAuth,\r\n    captcha: state.auth.captcha\r\n})\r\n\r\nexport default  connect(mstp, {loginUser})(Login)\r\n","import React, {Suspense} from 'react'\nimport './App.css'\nimport Nav from './components/Nav/Nav'\nimport {Redirect, Route, Switch} from 'react-router-dom'\nimport UsersContainer from './components/Users/UserContainer'\nimport ProfileContainer from './components/Profile/ProfileContainer'\nimport HeaderContainer from './components/Header/HeaderContainer'\nimport Login from './components/Login/Login'\nimport {connect} from 'react-redux'\nimport {initialized} from './redux/app-reducer'\nimport Loading from './Loader/Loader'\nconst DialogsLazy = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\n\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initialized()\n    }\n    render() {\n        if(!this.props.init){\n            return <Loading/>\n        }\n        return <div className={'App'}>\n            <HeaderContainer/>\n            <div className='content'>\n                <Nav newMessagesCount={this.props.newMessagesCount}/>\n                <main>\n                    <Switch>\n                        <Route path={'/profile/:userId?'} render={() => <ProfileContainer/>}/>\n                        <Route exact path={'/'} render={() => <Redirect to={'/profile'} />}/>\n                        <Route path={'/dialogs/:userId?'} render={(props) => <Suspense fallback={<Loading />}>\n                            <DialogsLazy userId={props.match.params.userId}/>\n                        </Suspense>}/>\n                        <Route path={'/login'} render={() => <Login/>}/>\n                        <Route path={'/users'} render={() => <UsersContainer/>}/>\n                        <Route path={'*'} render={() => <div>404</div>}/>\n                    </Switch>\n                </main>\n            </div>\n        </div>\n\n    }\n}\nconst mstp = (state) =>({\n    init: state.app.init,\n    newMessagesCount: state.dialogsPage.newMessagesCount\n})\n\nexport default connect(mstp, {initialized})(App)\n","import React from 'react'\r\nimport store from './redux/redux-store'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport {HashRouter} from 'react-router-dom'\r\nimport {Provider} from 'react-redux'\r\n\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <Provider  store={store}>\r\n            <App />\r\n        </Provider>\r\n    </HashRouter>, document.getElementById('root'))\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"ProfileInfo_wrap__2YKbh\",\"colImg\":\"ProfileInfo_colImg__1_sjH\",\"desc\":\"ProfileInfo_desc__14KuT\",\"status\":\"ProfileInfo_status__3b_Ta\",\"descList\":\"ProfileInfo_descList__3KJDJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"MyPost_wrap__3uDbc\",\"postCreate\":\"MyPost_postCreate__w5t6T\",\"header\":\"MyPost_header__3VQHd\"};","module.exports = __webpack_public_path__ + \"static/media/user.f4f3dd7a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__rREVv\",\"headerInner\":\"Header_headerInner__3JU6L\",\"logo\":\"Header_logo__3kERA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Users_block__Viggj\",\"item\":\"Users_item__1rnXv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"Pagination_selected__2Gk6S\",\"page\":\"Pagination_page__2y8RZ\"};"],"sourceRoot":""}