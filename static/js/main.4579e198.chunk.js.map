{"version":3,"sources":["redux/dialogs-reducer.js","components/Profile/Profile.module.css","components/Nav/Nav.module.css","redux/profile-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","utils/validate.js","components/Nav/Nav.jsx","components/Users/User.jsx","Loader/Loader.jsx","components/Users/Users.jsx","redux/users-selector.js","components/pagination/Pagination.jsx","components/Users/UserContainer.jsx","components/Profile/ProfileInfo/ProfileDesc.jsx","components/FormComponent/FormComponent.jsx","components/Profile/ProfileInfo/ProfileFormEdit.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPost/Post/Post.jsx","components/Profile/MyPost/MyPost.jsx","components/Profile/MyPost/MyPostContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","App.js","index.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPost/MyPost.module.css","assets/img/user.png","components/Header/Header.module.css","components/Users/Users.module.css","components/pagination/Pagination.module.css","api/api.js"],"names":["GET_MESSAGES","GENERAL_MESSAGES","GET_DIALOGS","PUT_UP_DIALOG","SET_SELECT_DIALOG","GET_NEW_MESSAGES_COUNT","initialState","dialogs","messages","generalMessage","selectDialog","newMessagesCount","dialogsReducer","state","action","type","count","filter","d","id","userId","select","getNewMessageCount","putUpDialogs","setSelectDialog","getDialogs","dispatch","a","dialogsAPI","result","newMessageCount","getMessages","getMessage","items","sendMessage","message","getState","dialog","dialogsPage","find","initializedDialog","startDialog","updateDialog","generalChat","getGeneralMessagesSuccess","module","exports","ADD_POST","SET_PROFILE_USERS","GET_PROFILE_STATUS","SET_PHOTOS","TOGGLE_PROFILE_MODE","DELETE_POST","profile","profileEditMode","status","posts","likesCounter","profileReducer","stateCopy","newPost","Math","random","p","photos","data","mode","toggleProfileMode","getProfileStatus","setProfile","profileAPI","getProfile","then","response","FOLLOW","SET_STATE","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_LOADING","users","pageSize","totalUsersCount","currentPage","isLoading","isFollowedInProgress","usersReducer","map","u","followed","total","param","isFetching","followSucces","setIsLoading","toggleIsFollowingProgress","SET_AUTH_DATA","GET_CAPTCHA","email","login","isAuth","captcha","authReducer","url","setUserData","getAuthUserData","authMe","me","resultCode","init","appReducer","reducers","combineReducers","profilePage","usersPage","auth","form","formReducer","app","store","createStore","applyMiddleware","thunk","window","max","Nav","props","className","styles","bar","link","activeClassName","active","to","list","linkCount","User","user","unfollow","follow","item","src","small","userPng","alt","width","name","disabled","some","onClick","Loading","Users","loading","block","key","getUsers","createSelector","getPageSize","getTotalUsersCount","getPage","followedInProgress","Pagination","useState","portionNumber","setPortionNumber","pageCount","ceil","sizePage","i","push","portionCount","leftPortion","rightPortion","page","onPageChanged","selected","UserContainer","pageNumber","getUsersThunk","this","React","Component","UsersContainer","connect","userAPI","totalCount","Contact","title","value","ProfileDesc","descList","aboutMe","lookingForAJob","lookingForAJobDescription","Object","keys","contacts","Textarea","input","meta","touched","error","warning","Input","ProfileFormRedux","reduxForm","onSubmit","handleSubmit","toggle","style","color","Field","component","el","ProfileInfo","img","large","wrap","colImg","isOwner","onChange","e","target","files","length","savePhotos","desc","fullName","updateStatus","editProfile","initialValues","ProfileStatus","setStatus","editMode","setEditMode","useEffect","autoFocus","onBlur","currentTarget","onDoubleClick","Post","postCreate","flexDirection","header","required","max20","undefined","AddPostForm","placeholder","validate","MyPost","memo","post","addPost","newPostText","MyPostContainer","body","Profile","ProfileContainer","match","params","getStatus","restorProfile","prevProps","prevState","snapshot","compose","file","changePhotos","res","someError","stopSubmit","_error","withRouter","RedirectComponent","Header","headerInner","logo","logout","HeaderContainer","signOut","LoginReduxForm","htmlFor","background","loginUser","password","rememberMe","signIn","formdata","DialogsLazy","lazy","App","initialized","path","render","exact","fallback","ReactDOM","document","getElementById","instance","axios","create","baseURL","withCredentials","headers","get","delete","profileDesc","put","photo","formData","FormData","append","resp"],"mappings":"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","file":"static/js/main.4579e198.chunk.js","sourcesContent":["import {dialogsAPI} from '../api/api'\r\n\r\nconst GET_MESSAGES = 'SOCIAL_NETWORK/DIALOGS/GET_MESSAGES'\r\nconst GENERAL_MESSAGES = 'SOCIAL_NETWORK/DIALOGS/GENERAL_MESSAGES'\r\nconst GET_DIALOGS = 'SOCIAL_NETWORK/DIALOGS/GET_DIALOGS'\r\nconst PUT_UP_DIALOG = 'SOCIAL_NETWORK/DIALOGS/PUT_UP_DIALOG'\r\nconst SET_SELECT_DIALOG = 'SOCIAL_NETWORK/DIALOGS/SET_SELECT_DIALOG'\r\nconst GET_NEW_MESSAGES_COUNT = 'SOCIAL_NETWORK/DIALOGS/GET_NEW_MESSAGES_COUNT'\r\nlet initialState = {\r\n    dialogs: [],\r\n    messages: [],\r\n    generalMessage: [],\r\n    selectDialog: false,\r\n    newMessagesCount: 0\r\n\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GENERAL_MESSAGES:\r\n            return {\r\n                ...state,\r\n                generalMessage: [...state.generalMessage, ...action.messages]\r\n            }\r\n        case GET_MESSAGES:\r\n            return {\r\n                ...state,\r\n                messages: [...action.messages]\r\n            }\r\n        case GET_DIALOGS:\r\n            return  {\r\n                ...state,\r\n                dialogs: action.dialogs\r\n            }\r\n        case GET_NEW_MESSAGES_COUNT:return {\r\n            ...state,\r\n            newMessagesCount: action.count\r\n        }\r\n        case PUT_UP_DIALOG:\r\n            return  {\r\n                ...state,\r\n                dialogs: [\r\n                    ...state.dialogs.filter(d => d.id === action.userId ),\r\n                    ...state.dialogs.filter(d => d.id !== action.userId )\r\n                ]\r\n            }\r\n        case SET_SELECT_DIALOG: return {\r\n            ...state,\r\n            selectDialog: action.select\r\n        }\r\n        default:return state\r\n    }\r\n}\r\nexport default dialogsReducer\r\nexport const getMessagesSuccess = (messages) => ({ type:GET_MESSAGES, messages })\r\nexport const getGeneralMessagesSuccess = (messages) => ({ type:GENERAL_MESSAGES, messages })\r\nexport const getNewMessageCount = (count) => ({ type:GET_NEW_MESSAGES_COUNT, count })\r\nexport const getDialogsSuccess = (dialogs) => ({ type:GET_DIALOGS, dialogs })\r\nexport const putUpDialogs = (userId) => ({ type:PUT_UP_DIALOG, userId })\r\nexport const setSelectDialog = (select) => ({ type:SET_SELECT_DIALOG, select })\r\n\r\n\r\nexport const getDialogs = () =>async (dispatch) => {\r\n    const result = await dialogsAPI.getDialogs()\r\n    dispatch(getDialogsSuccess(result))\r\n    dispatch(newMessageCount())\r\n}\r\nexport const startDialog = (userId) => async (dispatch) => {\r\n    await dialogsAPI.startDialog(userId)\r\n}\r\nexport const getMessages = (userId) => async (dispatch) => {\r\n    const result = await dialogsAPI.getMessage(userId)\r\n    dispatch(getMessagesSuccess(result.items))\r\n    dispatch(newMessageCount())\r\n}\r\nexport const sendMessage = (userId, message) => async (dispatch, getState) => {\r\n    await dialogsAPI.sendMessage(userId, message)\r\n    dispatch(getMessages(userId))\r\n    const dialog = getState().dialogsPage.dialogs.find(d => d.id === userId)\r\n    dialog ? dispatch(putUpDialogs(userId)) : dispatch(getDialogs())\r\n}\r\nexport const newMessageCount = () => async (dispatch) => {\r\n    const count =  await dialogsAPI.getNewMessageCount()\r\n    dispatch(getNewMessageCount(count))\r\n}\r\nexport const initializedDialog = (userId) => (dispatch) => {\r\n    if(userId !== 'ws' && userId) {\r\n        dispatch(startDialog(userId))\r\n        dispatch(getMessages(userId))\r\n        dispatch(setSelectDialog(true))\r\n    }\r\n    dispatch(getDialogs())\r\n}\r\nexport const updateDialog = (userId) => dispatch => {\r\n    if(userId !== 'ws') {\r\n        dispatch(getMessages(userId))\r\n        dispatch(setSelectDialog(true))\r\n    }else {\r\n        dispatch(setSelectDialog(false))\r\n    }\r\n}\r\nexport const generalChat = (messages) => (dispatch) => {\r\n    dispatch(getGeneralMessagesSuccess( messages))\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Profile_page__26mpX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"Nav_bar__QZHth\",\"link\":\"Nav_link__f1WjG\",\"list\":\"Nav_list__3k5QM\",\"linkCount\":\"Nav_linkCount__2vnhl\",\"active\":\"Nav_active__1iS-s\"};","import {profileAPI} from '../api/api'\r\nimport {stopSubmit} from 'redux-form'\r\n\r\nconst ADD_POST = 'SOCIAL_NETWORK/PROFILE/ADD_POST'\r\nconst SET_PROFILE_USERS = 'SOCIAL_NETWORK/PROFILE/SET_PROFILE_USERS'\r\nconst GET_PROFILE_STATUS = 'SOCIAL_NETWORK/PROFILE/GET_PROFILE_STATUS'\r\nconst SET_PHOTOS = 'SOCIAL_NETWORK/PROFILE/SET_PHOTOS'\r\nconst TOGGLE_PROFILE_MODE = 'SOCIAL_NETWORK/PROFILE/TOGGLE_PROFILE_MODE'\r\nconst DELETE_POST = 'SOCIAL_NETWORK/PROFILE/DELETE_POST'\r\n\r\nlet initialState = {\r\n    profile: null,\r\n    profileEditMode:false,\r\n    status:'',\r\n    posts: [\r\n        {id: 1, message: 'hello my darling', likesCounter: 12},\r\n        {id: 2, message: 'Its my first post ', likesCounter: 0},\r\n        {id: 3, message: 'hello my darling', likesCounter: 1}\r\n    ]\r\n}\r\nconst profileReducer = (state = initialState, action) =>{\r\n    let stateCopy = {...state}\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id:Math.random(),\r\n                message:action.newPost,\r\n                likesCounter:0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [newPost, ...state.posts]\r\n            }\r\n        case DELETE_POST:return {\r\n            ...state,\r\n            posts: state.posts.filter(p => p.id !== action.id)\r\n        }\r\n        case SET_PHOTOS:return {\r\n            ...state, profile: {...state.profile, photos:action.data}\r\n        }\r\n        case TOGGLE_PROFILE_MODE: return {\r\n            ...state,\r\n            profileEditMode: action.mode\r\n        }\r\n        case SET_PROFILE_USERS: return {...state, profile: action.data}\r\n        case GET_PROFILE_STATUS:\r\n            return{...state, status: action.status}\r\n        default: return stateCopy\r\n    }\r\n}\r\nexport default profileReducer\r\nexport const addPostAC = (newPost) => ({type:ADD_POST, newPost })\r\nexport const removePostAC = (id) => ({type: 'DELETE_POST', id})\r\nexport const toggleProfileMode = (mode) =>({type: TOGGLE_PROFILE_MODE, mode})\r\nexport const setUsersProfile = (data) => ({type: SET_PROFILE_USERS, data})\r\nexport const getProfileStatus = (status) => ({type:GET_PROFILE_STATUS, status})\r\nconst updatePhotos = (data) =>({type:SET_PHOTOS, data})\r\n\r\n\r\nexport const editProfile = (data) =>(dispatch, getState) =>{\r\n    profileAPI.editProfile(data).then(res =>{\r\n        const userId = getState().auth.userId\r\n        if(res.data.resultCode === 0){\r\n            dispatch(setProfile(userId))\r\n            dispatch(toggleProfileMode(false))\r\n        }else {\r\n            const someError = res.data.messages[0].length > 0 ? res.data.messages[0] : 'some error'\r\n            if(res.data.resultCode === 1){\r\n                dispatch(stopSubmit('profileEdit', {_error: someError}))\r\n            }\r\n\r\n\r\n        }\r\n    })\r\n}\r\nexport const setProfile = (userId)=>{\r\n    return dispatch => {\r\n        profileAPI.getProfile(userId)\r\n            .then(response => {\r\n                dispatch(setUsersProfile(response.data))\r\n            })\r\n    }\r\n}\r\nexport const getStatus = (userId) => dispatch =>{\r\n    profileAPI.getStatus(userId)\r\n        .then(response =>{\r\n            dispatch(getProfileStatus(response.data))\r\n        })\r\n}\r\nexport const updateStatus = (status) => dispatch =>{\r\n    profileAPI.updateStatus(status)\r\n        .then(response => {\r\n            if(response.data.resultCode === 0) {\r\n                return dispatch(getProfileStatus(status))\r\n            }\r\n        })\r\n}\r\n\r\nexport const savePhotos = (file) => dispatch =>{\r\n    profileAPI.changePhotos(file).then(res => {\r\n        dispatch(updatePhotos(res.data.data.photos))\r\n    })\r\n}\r\n","import {userAPI} from '../api/api'\r\n\r\nconst FOLLOW = 'SOCIAL_NETWORK/USERS/FOLLOW'\r\nconst SET_STATE = 'SOCIAL_NETWORK/USERS/SET_STATE'\r\nconst SET_CURRENT_PAGE = 'SOCIAL_NETWORK/USERS/SET_CURRENT_PAGE'\r\nconst SET_TOTAL_COUNT = 'SOCIAL_NETWORK/USERS/SET_TOTAL_COUNT'\r\nconst TOGGLE_IS_LOADING = 'SOCIAL_NETWORK/USERS/TOGGLE_IS_LOADING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'SOCIAL_NETWORK/USERS/TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n    users:[],\r\n    pageSize: 100,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isLoading: true,\r\n    isFollowedInProgress:[2],\r\n}\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {...state, users: state.users.map(u => {\r\n                    if(u.id === action.userId){\r\n                        return {...u, followed: !u.followed}\r\n                    }\r\n                    return u\r\n                })}\r\n        case SET_STATE: return {...state, users: action.users};\r\n        case SET_CURRENT_PAGE: return {...state, currentPage: action.currentPage};\r\n        case SET_TOTAL_COUNT: return {...state, totalUsersCount: action.total}\r\n        case TOGGLE_IS_LOADING: return {...state, isLoading: action.param}\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n\r\n            return  {\r\n            ...state,\r\n            isFollowedInProgress: action.isFetching ?\r\n                [...state.isFollowedInProgress, action.userId]:\r\n                state.isFollowedInProgress.filter( id => id !== action.userId)\r\n\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default usersReducer\r\nconst setTotalUsersCount = (total) => ({type: SET_TOTAL_COUNT, total})\r\nconst setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nconst followSucces = (userId) => ({ type: FOLLOW, userId})\r\nconst setUsers = (users) => ({ type: SET_STATE, users})\r\nconst setIsLoading = (param) =>({type: TOGGLE_IS_LOADING, param})\r\nexport const toggleIsFollowingProgress = (isFetching, userId) => ({type:TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId})\r\n\r\n\r\n\r\nexport const  getUsersThunk = (page, pageSize) => {\r\n\r\n    return dispatch =>{\r\n        dispatch(setIsLoading(true))\r\n        userAPI.getUsers(page, pageSize)\r\n            .then(data => {\r\n                dispatch(setCurrentPage(page))\r\n                dispatch(setTotalUsersCount(data.totalCount))\r\n                dispatch(setUsers(data.items))\r\n                dispatch(setIsLoading(false))\r\n            })\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) =>{\r\n    return dispatch => {\r\n        dispatch(toggleIsFollowingProgress(true, userId))\r\n        userAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followSucces(userId))\r\n                }\r\n                dispatch(toggleIsFollowingProgress(false, userId))\r\n            })\r\n    }\r\n}\r\n\r\nexport const follow = (userId) =>{\r\n\r\n    return dispatch => {\r\n        dispatch(toggleIsFollowingProgress(true, userId))\r\n        userAPI.follow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followSucces(userId))\r\n                }\r\n                dispatch(toggleIsFollowingProgress(false, userId))\r\n            })\r\n\r\n    }\r\n}\r\n\r\n","import {authMe} from '../api/api'\r\nimport {stopSubmit} from 'redux-form'\r\n\r\nconst SET_AUTH_DATA = 'SOCIAL_NETWORK/AUTH/SET_AUTH_DATA'\r\nconst GET_CAPTCHA = 'SOCIAL_NETWORK/AUTH/GET_CAPTCHA'\r\nconst initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth:false,\r\n    captcha: null\r\n}\r\nconst authReducer = (state = initialState, action) =>{\r\n    switch (action.type) {\r\n        case SET_AUTH_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        case GET_CAPTCHA:return {\r\n            ...state,\r\n            captcha: action.url\r\n        }\r\n        default: return state\r\n    }\r\n\r\n}\r\n\r\nexport default authReducer\r\nexport const getCaptchaUrl = (url) =>({type: GET_CAPTCHA, url})\r\nexport const setUserData = (userId, email, login, isAuth) => ({type:SET_AUTH_DATA, data: {userId, email, login, isAuth}})\r\n\r\nexport const getAuthUserData = () => dispatch => {\r\n    authMe.me()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                let {email, id, login} = response.data.data\r\n                dispatch(setUserData(id, email, login, true))\r\n            }\r\n        })\r\n}\r\nexport const loginUser = (email, password, rememberMe, captcha) => dispatch =>{\r\n    authMe.signIn(email, password, rememberMe, captcha)\r\n        .then(response =>{\r\n            if(response.data.resultCode === 0){\r\n                dispatch(getAuthUserData())\r\n            }else {\r\n                if(response.data.resultCode === 10){\r\n                    authMe.captcha().then(res =>{\r\n                        dispatch(getCaptchaUrl(res.data.url))\r\n                        dispatch(getAuthUserData())\r\n                    })\r\n                }\r\n                const someError = response.data.messages[0].length > 0 ? response.data.messages[0] : 'some error'\r\n                dispatch(stopSubmit('login', {_error: someError}))\r\n            }\r\n        })\r\n}\r\n\r\nexport const logout = () =>dispatch =>{\r\n    authMe.signOut().then(response =>{\r\n        dispatch(setUserData(null, null, null, false))\r\n    })\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import {getAuthUserData} from './auth-reducer'\r\n\r\nconst INITIALIZED_SUCCESS = 'SOCIAL_NETWORK_INITIALIZED_SUCCESS'\r\nconst initialState = {\r\n    init: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: return {\r\n            ...state,\r\n            init: true\r\n        }\r\n        default:return state\r\n    }\r\n}\r\nexport default appReducer\r\nconst initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\n\r\n\r\nexport const initialized = ()  =>async dispatch => {\r\n    await dispatch(getAuthUserData())\r\n    await dispatch(initializedSuccess())\r\n}","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport profileReducer from './profile-reducer'\r\nimport dialogsReducer from './dialogs-reducer'\r\nimport usersReducer from './users-reducer'\r\nimport authReducer from './auth-reducer'\r\nimport thunk from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from './app-reducer'\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\nlet store = createStore(reducers, applyMiddleware(thunk))\r\nwindow.store = store\r\nexport default store","export const required = value => {\r\n    if (value) return undefined\r\n    else return  'Field is required'\r\n}\r\n\r\nexport const maxLength = max => value =>\r\n    value && value.length > max ? `Max simbols ${max} ` : undefined","import React from 'react'\r\nimport styles from './Nav.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\n\r\nconst Nav = (props) => {\r\n    return(\r\n        <nav>\r\n            <ul className={styles.bar}>\r\n                <li>\r\n                    <NavLink className={styles.link} activeClassName={styles.active} to='/profile'>Profile</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink className={styles.link} activeClassName={styles.active} to='/news'>News</NavLink>\r\n                </li>\r\n                <li className={styles.list}>\r\n                    <NavLink className={styles.link} activeClassName={styles.active} to='/dialogs'>Message</NavLink>\r\n                    {props.newMessagesCount > 0 && <span className={styles.linkCount}>{props.newMessagesCount}</span>}\r\n                </li>\r\n                <li>\r\n                    <NavLink className={styles.link} activeClassName={styles.active} to='/photo'>Photo</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink className={styles.link} activeClassName={styles.active} to='/users'>Users</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport userPng from '../../assets/img/user.png'\r\nimport styles from './Users.module.css'\r\n\r\n\r\nconst User  = ({user,isFollowedInProgress, unfollow, follow}) => {\r\n    return(\r\n        <div className={styles.item}>\r\n            <NavLink to={'profile/' + user.id}>\r\n                <img src={user.photos.small != null ? user.photos.small : userPng} alt=\"user\" width={\"50px\"}/>\r\n            </NavLink>\r\n            <div>{user.name} </div>\r\n            {user.followed ? <button\r\n                    disabled={isFollowedInProgress.some(id => id===user.id)}\r\n                    onClick={()=> {unfollow(user.id)}}>unfollow</button>:\r\n                <button disabled={isFollowedInProgress.some(id => id===user.id)} onClick={()=>{\r\n                    follow(user.id)\r\n                }\r\n                }>follow</button>}\r\n        </div>\r\n    )\r\n}\r\nexport default User","import React from 'react'\r\nimport './Loading.css'\r\nconst Loading = () => {\r\n    return(\r\n        <div className='lds-spinner'>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\nexport default Loading","import React from 'react'\r\nimport styles from './Users.module.css'\r\nimport User from './User'\r\nimport Loading from '../../Loader/Loader'\r\n\r\n\r\nconst Users = (props) => {\r\n    if (props.loading) return <Loading/>\r\n    return (\r\n        <div>\r\n            <div className={styles.block}>\r\n                {props.users.map(user => <User key={user.id} user={user} follow={props.follow}\r\n                                              isFollowedInProgress={props.isFollowedInProgress}\r\n                                              unfollow={props.unfollow}/>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Users\r\n\r\n","import {createSelector} from 'reselect';\r\n\r\nexport const setUsers = (state) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getUsers  = createSelector( setUsers, (users) => {\r\n     return users.filter( u => u )\r\n})\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const isLoading = (state) => {\r\n    return state.usersPage.isLoading\r\n}\r\nexport const followedInProgress = (state) => {\r\n    return state.usersPage.isFollowedInProgress\r\n}","import styles from './Pagination.module.css'\r\nimport React, {useState} from 'react'\r\n\r\nconst Pagination = (props) =>{\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let pageCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    let  sizePage =[]\r\n    for (let i = 1; i <= pageCount; i++){\r\n        sizePage.push(i)\r\n    }\r\n    const portionSize = 10\r\n    const portionCount = Math.ceil(pageCount / portionSize)\r\n    const leftPortion = (portionNumber - 1) * portionSize + 1\r\n    const rightPortion = portionNumber * portionSize\r\n\r\n    return(\r\n        <div className={styles.page}>{portionNumber > 1 &&  <button onClick={() => {setPortionNumber(portionNumber -1)}}>{'<'}</button>}\r\n            {sizePage.filter( p => p >= leftPortion && p <= rightPortion).map((p) => <span\r\n                key={p}\r\n                onClick={()=> props.onPageChanged(p)}\r\n                className={props.currentPage === p ? `${styles.selected}` : ''}>{p}</span>)}\r\n            {portionCount && pageCount > rightPortion &&  <button onClick={() => {setPortionNumber(portionNumber + 1)}}>{'>'}</button>}\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Pagination","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {follow, getUsersThunk, toggleIsFollowingProgress, unfollow} from '../../redux/users-reducer';\r\nimport Users from './Users'\r\n\r\nimport {\r\n    followedInProgress,\r\n    getPage,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers,\r\n    isLoading,\r\n} from '../../redux/users-selector'\r\nimport Pagination from '../pagination/Pagination'\r\n\r\nclass UserContainer extends React.Component{\r\n    componentDidMount() {\r\n        this.props.getUsersThunk(this.props.currentPage, this.props.pageSize )\r\n    }\r\n    onPageChanged =(pageNumber) => {\r\n        this.props.getUsersThunk(pageNumber, this.props.pageSize)\r\n    }\r\n    render(){\r\n        return <>\r\n            <Pagination onPageChanged={this.onPageChanged}\r\n                        currentPage={this.props.currentPage}\r\n                        totalUsersCount={this.props.totalUsersCount}\r\n                        pageSize={this.props.pageSize}/>\r\n            <Users\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                users={this.props.users}\r\n                loading={this.props.isLoading}\r\n                isFollowedInProgress={this.props.isFollowedInProgress}\r\n                toggleIsFollowingProgress={this.props.toggleIsFollowingProgress}\r\n            />\r\n        </>\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getPage(state),\r\n        isLoading: isLoading(state),\r\n        isFollowedInProgress: followedInProgress(state)\r\n    }\r\n}\r\nconst UsersContainer = connect(mapStateToProps,\r\n    { unfollow, follow, toggleIsFollowingProgress,getUsersThunk})(UserContainer)\r\n\r\nexport default UsersContainer","import React from 'react'\r\nimport styles from './ProfileInfo.module.css'\r\nconst ProfileDesc = ({profile, toggleProfileMode}) =>{\r\n    return(\r\n        <ul className={styles.descList}>\r\n            <Contact title={'aboutMe :'} value={profile.aboutMe}/>\r\n            <Contact title={'lookingForAJob :'} value={profile.lookingForAJob ? 'yeas' : 'no'}/>\r\n            <Contact title={'lookingForAJobDescription :'} value={profile.lookingForAJobDescription}/>\r\n            {Object.keys(profile.contacts).map( key =>{\r\n                return <Contact key={key} title={key} value={profile.contacts[key]} />\r\n            })}\r\n            <button onClick={()=> toggleProfileMode(true)}>change</button>\r\n        </ul>\r\n    )\r\n}\r\nconst Contact = ({title, value}) =>{\r\n    return <li ><strong>{title} </strong> {value}</li>\r\n}\r\n\r\nexport default ProfileDesc","import React from 'react'\r\n\r\n\r\nexport const Textarea = ({input, meta: { touched, error, warning }, ...props }) =>{\r\n\r\n    return(\r\n        <div>\r\n            <textarea {...input} {...props}/>\r\n            {touched && (error && <span>{error}</span>)}\r\n        </div>\r\n    )\r\n}\r\nexport const Input = ({input, meta: { touched, error, warning }, ...props }) =>{\r\n\r\n    return(\r\n        <div>\r\n            <input {...input} {...props}/>\r\n            {touched && (error && <span>{error}</span>)}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {Input} from '../../FormComponent/FormComponent'\r\nconst ProfileForm = ({error, ...props}) => {\r\n    return (\r\n            <form onSubmit={props.handleSubmit}>\r\n                <button>sub</button> <button onClick={()=> props.toggle(false)}>back</button>\r\n                {error && <div style={{color:'red'}}>{error}</div>}\r\n                <div>Full name: <Field type={'text'} component={'input'} name={'fullName'}/></div>\r\n                <div>About me: <Field type={'text'} component={'input'} name={'aboutMe'}/></div>\r\n                <div>lookingForAJob : <Field type={'checkbox'} component={'input'} name={'lookingForAJob'}/></div>\r\n                <div>lookingForAJobDescription: <Field type={'text'} component={'textarea'} name={'lookingForAJobDescription'}/></div>\r\n                {Object.keys(props.profile.contacts).map( el =>{\r\n                    return <div key={el}>{el}<Field type={'text'} component={Input} name={`contacts.${el}`} /></div>\r\n                })}\r\n\r\n            </form>\r\n    )\r\n}\r\n\r\nconst ProfileFormRedux = reduxForm({form: 'profileEdit'})(ProfileForm)\r\nexport default ProfileFormRedux","import React, {useEffect, useState} from 'react'\r\nimport styles from './ProfileInfo.module.css'\r\nimport Loading from '../../../Loader/Loader'\r\nimport ProfileDesc from './ProfileDesc'\r\nimport ProfileFormRedux from './ProfileFormEdit'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\n\r\nconst ProfileInfo = props =>{\r\n    const onSave = (e) =>{\r\n        if(e.target.files.length){\r\n            props.savePhotos(e.target.files[0])\r\n        }\r\n\r\n    }\r\n    const changeProfile = (form) =>{\r\n        props.editProfile(form)\r\n    }\r\n    const img = props.profile.photos.large ? props.profile.photos.large : \"https://placekitten.com/200/260\"\r\n    if (!props.profile) {\r\n        return <Loading/>\r\n    }\r\n\r\n    return(\r\n        <div className={styles.wrap}>\r\n            <div className={styles.colImg}>\r\n                <img src={img} alt=\"info\"/>\r\n                {props.isOwner ? <input onChange={onSave} type=\"file\"/> :\r\n                <NavLink to={'/dialogs/' + props.profile.userId}>\r\n                    <button>send</button>\r\n                </NavLink>}\r\n\r\n            </div>\r\n            <div className={styles.desc}>\r\n                <h1>{props.profile.fullName}</h1>\r\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n                {\r\n                    props.mode ?\r\n                        <ProfileFormRedux\r\n                            onSubmit={changeProfile}\r\n                            profile={props.profile}\r\n                            initialValues={props.profile}\r\n                            toggle={props.toggleProfileMode}\r\n                        />\r\n                        : <ProfileDesc profile={props.profile} toggleProfileMode={props.toggleProfileMode} />\r\n                }\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default ProfileInfo\r\n\r\nconst ProfileStatus = (props) => {\r\n    let [status, setStatus] = useState(props.status)\r\n    let [editMode, setEditMode] = useState(false)\r\n    useEffect(()=>{\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const changeMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivetedMode = () =>{\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const changeStatus = (e) =>{\r\n        setStatus(e.currentTarget.value)\r\n\r\n    }\r\n    return(\r\n        <div className={styles.status}>\r\n            <strong>status :</strong>\r\n            {editMode ?\r\n                <input autoFocus={true}\r\n                       onBlur={deactivetedMode}\r\n                       value={status}\r\n                       onChange={changeStatus}/>\r\n                :<span onDoubleClick={changeMode}>{status}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\nimport styles from '../MyPost.module.css'\r\nimport userPng from '../../../../assets/img/user.png';\r\n\r\nconst Post = (props)=>{\r\n    return (\r\n        <div>\r\n            <div  className={styles.postCreate}>\r\n                <div style={{flexDirection: 'column'}} className={styles.header}>\r\n                    <img src={userPng} alt=\"\"/>\r\n                    <div>NAME PROFILE</div>\r\n                </div>\r\n                <div>{props.message}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Post","import React from 'react'\r\nimport styles from  './MyPost.module.css'\r\nimport Post from './Post/Post'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {maxLength, required} from '../../../utils/validate'\r\nimport {Textarea} from '../../FormComponent/FormComponent'\r\nimport userPng from '../../../assets/img/user.png'\r\n\r\nconst max20 = maxLength(20)\r\nconst AddPost = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field name={'newPostText'} component={Textarea}\r\n                   type={'text'} placeholder={'Введите текст'}\r\n            validate={[required, max20]}/>\r\n            <button>add post</button>\r\n        </form>\r\n    )\r\n}\r\nconst AddPostForm = reduxForm({form: 'addPostForm'})(AddPost)\r\n\r\n\r\n\r\nconst MyPost = React.memo ((props) => {\r\n\r\n    let post = props.profilePage.posts.map(el =>{\r\n        return <Post key={el.id} message ={el.message}/>\r\n    })\r\n\r\n    const addPost = (value)=> {\r\n        props.addPost(value.newPostText)\r\n        value.newPostText = ''\r\n    }\r\n\r\n    return (\r\n        <div className={styles.wrap}>\r\n            <div className={styles.postCreate}>\r\n                <div className={styles.header}>\r\n                    <img src={userPng} alt=\"\"/>\r\n                    <div>NAME PROFILE</div>\r\n                </div>\r\n                <AddPostForm onSubmit={addPost}/>\r\n            </div>\r\n            {post}\r\n        </div>\r\n\r\n    )\r\n})\r\n\r\nexport default MyPost\r\n\r\n","import React from 'react'\r\nimport {addPostAC} from '../../../redux/profile-reducer'\r\nimport MyPost from './MyPost'\r\nimport {connect} from 'react-redux'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        addPost: (body) => dispatch(addPostAC(body))\r\n    }\r\n}\r\nconst MyPostContainer =  connect(mapStateToProps, mapDispatchToProps)(MyPost)\r\nexport default MyPostContainer\r\n\r\n","import React from 'react'\r\nimport styles from './Profile.module.css'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport MyPostContainer from './MyPost/MyPostContainer'\r\nimport Loading from '../../Loader/Loader'\r\n\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n    if(!props.profile)return <Loading/>\r\n    return (\r\n        <div className={styles.page}>\r\n                    <ProfileInfo\r\n                        mode={props.mode} toggleProfileMode={props.toggleProfileMode}\r\n                        isOwner={props.isOwner}\r\n                        profile={props.profile}\r\n                        status={props.status}\r\n                        updateStatus={props.updateStatus}\r\n                        savePhotos={props.savePhotos}\r\n                        editProfile={props.editProfile}/>\r\n                <MyPostContainer/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport Profile from './Profile'\r\nimport {connect} from 'react-redux'\r\nimport {editProfile, getStatus, savePhotos, setProfile, toggleProfileMode, updateStatus} from '../../redux/profile-reducer'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect'\r\nimport {compose} from 'redux'\r\n\r\n\r\nclass ProfileContainer extends React.Component{\r\n    restorProfile() {\r\n        let userId = this.props.match.params.userId\r\n        if(!userId) userId = this.props.userId\r\n        this.props.setProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n    componentDidMount() {\r\n       this.restorProfile()\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.match.params.userId !== this.props.match.params.userId){\r\n            this.restorProfile()\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return <Profile\r\n            profile={this.props.profile} status={this.props.status}\r\n            isOwner={!this.props.match.params.userId}\r\n            savePhotos={this.props.savePhotos}\r\n            updateStatus={this.props.updateStatus}\r\n            mode={this.props.mode} toggleProfileMode={this.props.toggleProfileMode}\r\n            editProfile={this.props.editProfile}/>\r\n    }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        userId: state.auth.userId,\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        mode: state.profilePage.profileEditMode,\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, {setProfile, getStatus, updateStatus,\r\n        savePhotos, toggleProfileMode, editProfile}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to={'/login'} />\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    const mapStateToProps = (state) =>({isAuth: state.auth.isAuth})\r\n    let ConectectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n    return ConectectedRedirectComponent\r\n}","import React from 'react'\r\nimport styles from './Header.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Header = (props)=> {\r\n    return(\r\n        <header className={styles.header}>\r\n            <div className='container'>\r\n                <div className={styles.headerInner}>\r\n                    <h2>social network</h2>\r\n                    <div className={styles.logo}>\r\n                        {props.isAuth ? <span>{props.email} <button onClick={props.logout}>logout</button></span>\r\n                            :<NavLink to={'/login'}>\r\n                                <div className={styles.logo}>{props.isAuth ? props.login : 'login'}</div>\r\n                            </NavLink>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\nexport default Header","import React from 'react'\r\nimport Header from './Header'\r\nimport {connect} from 'react-redux'\r\nimport {getAuthUserData, logout} from '../../redux/auth-reducer'\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component{\r\n    componentDidMount() {\r\n        this.props.getAuthUserData()\r\n    }\r\n    render() {\r\n        return <Header {...this.props} isAuth={this.props.isAuth}/>\r\n    }\r\n}\r\nconst setStateToProps = (state) =>({\r\n    isAuth: state.auth.isAuth,\r\n    email: state.auth.email,\r\n\r\n})\r\nexport default connect(setStateToProps, {getAuthUserData, logout})(HeaderContainer)","import React from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport { required} from '../../utils/validate'\r\nimport {connect} from 'react-redux'\r\nimport {loginUser} from '../../redux/auth-reducer'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\n\r\nconst LoginForm = (props) =>{\r\n\r\n    return(\r\n        <form onSubmit={ props.handleSubmit}>\r\n            <div>\r\n                <Field name='email' component='input' type='text'  placeholder={'login'}\r\n                       validate={[required]}/>\r\n                <div><b>free@samuraijs.com</b></div>\r\n            </div>\r\n            <div>\r\n                <Field name='password' component='input' type='password' placeholder={'password'}/>\r\n                <div><b>free</b></div>\r\n            </div>\r\n            <div>\r\n                <Field name='rememberMe' component='input' type='checkbox' />\r\n                <label htmlFor='checkbox'>Remember me</label>\r\n            </div>\r\n            {props.error && <div><span style={{background:'red'}}>{props.error}</span></div>}\r\n            {props.captcha && <img src={props.captcha} alt='captcha'/>}\r\n            {props.captcha && <div> <Field name='captcha' component='input' type='text' placeholder={'captcha'}/></div>}\r\n            <button type='submit'>Submit</button>\r\n            <button type={'reset'}>Reset</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm =  reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmitForm = (formdata) => {\r\n        const {email, password, rememberMe, captcha} = formdata\r\n        props.loginUser(email, password, rememberMe, captcha)\r\n    }\r\n    if(props.isAuth){\r\n       return <Redirect to={'/profile'}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div><h1>Login</h1></div>\r\n            <LoginReduxForm onSubmit={onSubmitForm} captcha={props.captcha}/>\r\n        </div>\r\n    )\r\n}\r\nconst mstp = (state) =>({\r\n    isAuth: state.auth.isAuth,\r\n    captcha: state.auth.captcha\r\n})\r\n\r\nexport default  connect(mstp, {loginUser})(Login)\r\n","import React, {Suspense} from 'react'\nimport './App.css'\nimport Nav from './components/Nav/Nav'\nimport {Redirect, Route, Switch} from 'react-router-dom'\nimport UsersContainer from './components/Users/UserContainer'\nimport ProfileContainer from './components/Profile/ProfileContainer'\nimport HeaderContainer from './components/Header/HeaderContainer'\nimport Login from './components/Login/Login'\nimport {connect} from 'react-redux'\nimport {initialized} from './redux/app-reducer'\nimport Loading from './Loader/Loader'\nconst DialogsLazy = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\n\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initialized()\n    }\n    render() {\n        if(!this.props.init){\n            return <Loading/>\n        }\n        return <div className={'App'}>\n            <HeaderContainer/>\n            <div className='content'>\n                <Nav newMessagesCount={this.props.newMessagesCount}/>\n                <main>\n                    <Switch>\n                        <Route path={'/profile/:userId?'} render={() => <ProfileContainer/>}/>\n                        <Route exact path={'/'} render={() => <Redirect to={'/profile'} />}/>\n                        <Route path={'/dialogs/:userId?'} render={(props) => <Suspense fallback={<Loading />}>\n                            <DialogsLazy userId={props.match.params.userId}/>\n                        </Suspense>}/>\n                        <Route path={'/login'} render={() => <Login/>}/>\n                        <Route path={'/users'} render={() => <UsersContainer/>}/>\n                        <Route path={'*'} render={() => <div>404</div>}/>\n                    </Switch>\n                </main>\n            </div>\n        </div>\n\n    }\n}\nconst mstp = (state) =>({\n    init: state.app.init,\n    newMessagesCount: state.dialogsPage.newMessagesCount\n})\n\nexport default connect(mstp, {initialized})(App)\n","import React from 'react'\nimport store from './redux/redux-store'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport {HashRouter} from 'react-router-dom'\nimport {Provider} from 'react-redux'\n\n\nReactDOM.render(\n    <HashRouter>\n        <Provider  store={store}>\n            <App />\n        </Provider>\n    </HashRouter>, document.getElementById('root'))\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"ProfileInfo_wrap__2YKbh\",\"colImg\":\"ProfileInfo_colImg__1_sjH\",\"desc\":\"ProfileInfo_desc__14KuT\",\"status\":\"ProfileInfo_status__3b_Ta\",\"descList\":\"ProfileInfo_descList__3KJDJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"MyPost_wrap__3uDbc\",\"postCreate\":\"MyPost_postCreate__w5t6T\",\"header\":\"MyPost_header__3VQHd\"};","module.exports = __webpack_public_path__ + \"static/media/user.f4f3dd7a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__rREVv\",\"headerInner\":\"Header_headerInner__3JU6L\",\"logo\":\"Header_logo__3kERA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Users_block__Viggj\",\"item\":\"Users_item__1rnXv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"Pagination_selected__2Gk6S\",\"page\":\"Pagination_page__2y8RZ\"};","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL:\"https://social-network.samuraijs.com/api/1.0/\",\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\":\"ef3df34b-f620-4141-98a4-941ac190a9df\"\r\n    }\r\n})\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return  instance.get(`users?page=${currentPage}&count=${pageSize}&sortOrder=asc`)\r\n            .then(response => response.data)\r\n    },\r\n    follow(id) {\r\n        return instance.post(`follow/${id}`)\r\n    },\r\n    unfollow(id) {\r\n        return instance.delete(`follow/${id}`)\r\n    }\r\n}\r\n\r\nexport const profileAPI ={\r\n    getProfile(userId) {\r\n        return instance.get(`/profile/${userId}`)\r\n    },\r\n    editProfile(profileDesc) {\r\n        return instance.put(`/profile`, profileDesc)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`/profile/status/${userId}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`/profile/status`, {status})\r\n    },\r\n    changePhotos(photo) {\r\n        const formData = new FormData()\r\n        formData.append('image', photo)\r\n        return instance.put('/profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    }\r\n\r\n}\r\nexport const authMe ={\r\n    me(){\r\n        return instance.get('auth/me')\r\n    },\r\n    signIn(email, password, rememberMe = false, captcha=''){\r\n        return instance.post('auth/login',{email, password, rememberMe, captcha})\r\n    },\r\n    signOut(){\r\n        return instance.delete('auth/login')\r\n    },\r\n    captcha() {\r\n        return instance.get('security/get-captcha-url')\r\n    }\r\n}\r\nexport const dialogsAPI ={\r\n    getDialogs() {\r\n        return instance.get('dialogs')\r\n            .then(resp => resp.data)\r\n    },\r\n    startDialog(userId) {\r\n        return instance.put(`dialogs/${userId}`)\r\n            .then(resp => resp.data)\r\n    },\r\n    getMessage(userId) {\r\n        return instance.get(`dialogs/${userId}/messages`)\r\n            .then(resp => resp.data)\r\n    },\r\n    sendMessage(userId, body) {\r\n        return instance.post(`dialogs/${userId}/messages`, {body})\r\n            .then(resp => resp.data)\r\n    },\r\n    getNewMessageCount() {\r\n        return instance.get(`dialogs/messages/new/count`)\r\n            .then(resp => resp.data)\r\n    },\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}